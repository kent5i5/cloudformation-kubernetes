Description: >
    Kubernetes Servers 
    ying kit ng April 2, 2020

Parameters:
    EnvironmentName:
        Description: Single Parameter that we are passing with the env name.
        Type: String

Resources:
    LBSecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http to our load balancer
            VpcId:
              Fn::ImportValue:
                !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
    WebServerSecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http to our hosts and SSH from the local
            VpcId:
              Fn::ImportValue:
                !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            - IpProtocol: tcp
              FromPort: 22
              ToPort: 22
              CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 0
              ToPort: 65535
              CidrIp: 0.0.0.0/0

    WebAppLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
            UserData:
              Fn::Base64: !Sub |
                #!/bin/bash
                sudo apt-get update -y
                sudo apt-get install docker.io -y
                curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
                sudo chmod +x ./kubectl
                sudo mv ./kubectl /usr/local/bin/kubectl
                curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 \ && chmod +x minikube
                sudo mkdir -p /usr/local/bin/
                sudo install minikube /usr/local/bin/
                sudo apt-get install conntrack
                sudo minikube start --driver=none
                git clone https://github.com/kent5i5/mls.git
                cd mls
                sudo docker build --tag=mls .
                sudo kubectl run mls1 --image=mls --port=8080 --labels app=mls1 --image-pull-policy=Never  

            ImageId: ami-0d1cd67c26f5fca19 
            KeyName: jenkinKey
            SecurityGroups:
            - Ref: WebServerSecGroup
            InstanceType: t3.medium
            BlockDeviceMappings:
            - DeviceName: "/dev/sdk"
              Ebs:
                VolumeSize: '10'
            # IamInstanceProfile: 
            #   Ref: "ECRProfile"

    WebAppGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            VPCZoneIdentifier:
            - Fn::ImportValue: 
                !Sub "${EnvironmentName}-PUB-NETS"
            LaunchConfigurationName:
              Ref: WebAppLaunchConfig
            MinSize: '2'
            MaxSize: '3'
            TargetGroupARNs:
            - Ref: WebAppTargetGroup
    WebAppLB:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Subnets:
            - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
            - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
            SecurityGroups:
            - Ref: LBSecGroup
    Listener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            DefaultActions:
            - Type: forward
              TargetGroupArn:
                Ref: WebAppTargetGroup
            LoadBalancerArn:
              Ref: WebAppLB
            Port: '80'
            Protocol: HTTP
    ALBListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            Actions:
            - Type: forward
              TargetGroupArn: !Ref 'WebAppTargetGroup'
            Conditions:
            - Field: path-pattern
              Values: [/]
            ListenerArn: !Ref 'Listener'
            Priority: 1
    WebAppTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            HealthCheckIntervalSeconds: 10
            HealthCheckPath: /
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 8
            HealthyThresholdCount: 2
            Port: 80
            Protocol: HTTP
            UnhealthyThresholdCount: 5
            VpcId: 
              Fn::ImportValue:
                Fn::Sub: "${EnvironmentName}-VPCID"

# Outputs: 

#     LBSecGroup: 
#         Description: A URL for the webapp
#         Value: !Ref URL
#         Export:
#           Name: !Sub ${EnvironmentName}-LBURL